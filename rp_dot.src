/*
   This is the source from which pre-burned rules for Dot Prompt mode of
   PP (xBaseScript) are created. You may copy this file to a file named
   rp_dot.ch to overide the pre-burned rules by modifying rp_dot.ch.
*/

#command CLS                                                            ;
      => Scroll( 2, 0, MaxRow() - 1, MaxCol() )                         ;
       ; SetPos( 2, 0 )

#COMMAND BROWSE => Browse( 1, 0, MaxRow() - 1, MaxCol() )

#COMMAND LIST STRUCTURE    => DISPLAY STRUCTURE
#COMMAND DISPLAY STRUCTURE => M->__nArea := Select();
                            ; COPY STRUCTURE EXTENDED TO _$struct$_;
                            ; USE _$struct$_ ALIAS NewStructure READONLY NEW;
                            ; Browse();
                            ; CLOSE;
                            ; SELECT ( M->__nArea )

#COMMAND MODIFY STRUCTURE  => M->__nArea := Select();
                            ; M->__cFile := dbInfo( 10 );
                            ; CLOSE;
                            ; dbModifyStructure( M->__cFile );
                            ; SELECT ( M->__nArea );
                            ; USE ( M->__cFile )

#COMMAND EXIT   => __QUIT()
#COMMAND QUIT   => __QUIT()

#TRANSLATE _GET_( <var>, <varname>, [<pic>], [<valid>], [<when>] ) => __GET( MEMVARBLOCK(<varname>), <varname>, <pic>, <valid>, <when> )

#ifndef __HARBOUR__
   #TRANSLATE __GET( <parlist,...>):Display()       => __GET( <parlist> )
   #TRANSLATE aAdd( GetList, __GET(<parlist,...>) ) => __oGet := __GET(<parlist>) ; aAdd( GetList, __oGet ) ; __oGet:Display()
#endif

#COMMAND IF <ifExp>         => __SetIf( <ifExp> )
#COMMAND ELSEIF <elseifExp> => __SetElseIf( <elseifExp> )
#COMMAND ELSE               => __SetElse()
#COMMAND ENDIF [<x,...>]    => __SetEnd() [<-x->]
#COMMAND END   [<x,...>]    => __SetEnd() [<-x->]

#COMMAND DO CASE            => __SetDoCase()
#COMMAND CASE <caseExp>     => __SetCase( <caseExp> )
#COMMAND OTHERWISE          => __SetOtherwise()
#COMMAND ENDCASE [<x,...>]  => __SetEndCase() [<-x->]

#COMMAND DO <file>.PRG      => PP_Run( #<file> + ".prg" )
#COMMAND DO <file>.PRG WITH <params,...> => PP_Run( #<file> + ".prg", {<params>} )

#command CD <(dir)>         => DirChange( <(dir)> )
